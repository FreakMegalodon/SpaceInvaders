Enemy/game_over_condition


from math import floor

def binary_search(Array, Search_Term):
    n = len(Array)
    L = 0
    R = n-1
    
    while L <= R:
        mid = floor((L+R)/2)
        if Array[mid] < Search_Term:
            L = mid + 1
        elif Array[mid] > Search_Term:
            R = mid - 1
        else:
            return mid
    return -1

"""
def set_angulo_inicial():
    
    rd      = randint(30, 60)
    x       = math.cos(rd)
    y       = math.sin(rd)

    rd      = randint(0, 100)
    side_x  = -1 if rd < 50 else 1
    rd      = randint(0,100)
    side_y  = -1 if rd < 50 else 1
    
    return x * side_x, y * side_y
"""
            if self.move_x:
                self.move_y = True
                self.move_x = False
            else:
                self.move_y = False
                self.move_x = True

            self.dir *= -1            
        if self.move_y:
            self.move_down()
            self.move_x = True
            self.move_y = False

[] aleatorio
[] vidas--
[x] pontuacao

[]ranking
[]entrada por console


##################################################
Bonus

    #def update_bonus(self):
        #self.move_bonus()
        
        #if self.bonus_image[0].x < self.game.janela.width or self.bonus_image[0].x > -300:
            
        #else:
            #self.spawn_bonus()
            #print("Debug: Bonus released: %d"%self.bonus_image[0].x)
        #if len(self.bonus_image) == 0:
        #    self.bonus_time -= self.game.janela.delta_time()
        #    if self.bonus_time <= 0:
        #        self.bonus_time = 2.0
        #        self.spawn_bonus()
        #else:
            #print(self.bonus[0].x)
        #return

#    def spawn_bonus(self):
#        dir = random.randint(0, 100)
#        if dir < 50:
#            self.bonus_dir = 1
#            start_pos = -300
#        else:
#            self.bonus_dir = -1
#            #start_pos = self.game.janela.width + 300
#        return

    #def move_bonus(self):
    #    self.bonus_image[0].set_position(self.bonus_image[0].x + (100 * self.game.janela.delta_time() * self.bonus_dir), 0)
    #    return

End Bonus
#################################################