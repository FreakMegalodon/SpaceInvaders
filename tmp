Enemy/game_over_condition


from math import floor

def binary_search(Array, Search_Term):
    n = len(Array)
    L = 0
    R = n-1
    
    while L <= R:
        mid = floor((L+R)/2)
        if Array[mid] < Search_Term:
            L = mid + 1
        elif Array[mid] > Search_Term:
            R = mid - 1
        else:
            return mid
    return -1

"""
def set_angulo_inicial():
    
    rd      = randint(30, 60)
    x       = math.cos(rd)
    y       = math.sin(rd)

    rd      = randint(0, 100)
    side_x  = -1 if rd < 50 else 1
    rd      = randint(0,100)
    side_y  = -1 if rd < 50 else 1
    
    return x * side_x, y * side_y
"""
            if self.move_x:
                self.move_y = True
                self.move_x = False
            else:
                self.move_y = False
                self.move_x = True

            self.dir *= -1            
        if self.move_y:
            self.move_down()
            self.move_x = True
            self.move_y = False

[] aleatorio
[] vidas--
[x] pontuacao

[]ranking
[]entrada por console